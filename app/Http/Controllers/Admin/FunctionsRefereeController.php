<?php

namespace App\Http\Controllers\Admin;

use App\Exports\DataExport;
use App\Http\Controllers\ApiResourceController;
use App\Models\FunctionsReferee;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\DB;
use Maatwebsite\Excel\Facades\Excel;

class FunctionsRefereeController extends ApiResourceController
{
    //
    public function setModel()
    {
        $this->model = new FunctionsReferee();
    }

    public function index(Request $request)
    {
        $this->_filter($request);
        return parent::index($request); // TODO: Change the autogenerated stub
    }

    public function show(Request $request, $id)
    {
        $this->_filter($request);
        return parent::show($request, $id); // TODO: Change the autogenerated stub
    }

    public function store(Request $request)
    {
        return parent::_store($request);
    }

    public function update(Request $request, $id)
    {
        return parent::_update($request, $id);
    }

    private function _filter(Request $request)
    {
        $this->query->with('event.sportDiscipline.sport', 'event');
        if ($request->sport_id) {
            $this->query->whereHas('event.sportDiscipline.sport', function ($q) use ($request) {
                $q->where('id', $request->sport_id);
            });
        }
    }
    public function exportData(Request $request)
    {
        $id = json_decode($request->ids);
        $header = [];
        $fields = [];
        $columns = json_decode($request->columns, true);
        foreach ($columns as $column) {
            $fields[] = $column['field'];
            $header[] = $column['title'];
        }
        $data = [];
        $function = $this->query->whereIn('id', $id)->with(['event.sportDiscipline.sport'])->get();

        foreach ($function as $key => $value) {
            foreach ($fields as $field) {
                $data[$key][$field] = $value[$field];
                if ($field == 'event_id') {
                    if (App::getLocale() == "vi") {
                        $data[$key]['event_id'] = isset($value['event']) ? $value['event']['name'] : "";
                    }
                    if (App::getLocale() == "en") {
                        $data[$key]['event_id'] = isset($value['event']) ?  $value['event']['english_name'] : '';
                    }
                }
                if ($field == 'sport') {
                    if (App::getLocale() == "vi") {
                        $data[$key]['sport'] = isset($value['event']['sportDiscipline']['sport']) ?  $value['event']['sportDiscipline']['sport']['name'] : '';
                    }
                    if (App::getLocale() == "en") {
                        $data[$key]['sport'] = isset($value['event']['sportDiscipline']['sport']) ?  $value['event']['sportDiscipline']['sport']['english_name'] : '';
                    }
                }
            }
        }
        return Excel::download(new DataExport($id, $header, $data), 'FunctionReferee.xlsx');
    }
    protected function bulkDelete(Request $request)
    {
        DB::beginTransaction();
        try {
            $ids = json_decode($request->ids, true);
            foreach ($ids as $id) {
                $referee = FunctionsReferee::query()->where('id', $id)->first();
                $referee->delete();
            }
            DB::commit();
            return $this->deleteResultResponse($referee);
        } catch (\Exception $e) {
            DB::rollBack();
            return $this->errorResponseSystem();
        }
    }
    public function destroy(Request $request, $id)
    {
        return parent::destroy($request, $id);
    }
}
